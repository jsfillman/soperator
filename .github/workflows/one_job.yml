name: Build and Push Multi-Arch Docker Images

on:
  push:
    paths-ignore:
      - '.github/**'
      - 'docs/**'
      - 'CODEOWNERS'
      - 'LICENSE'
      - 'PROJECT'
      - 'README.md'
      - 'SECURITY.md'
      - 'images/worker/gpubench/**'
  pull_request:
    branches:
      - main
      - dev

permissions:
  contents: read
  packages: write
  attestations: write
  id-token: write

jobs:
  pre-build:
    runs-on: ubuntu-latest

    outputs:
      UNSTABLE: ${{ steps.set-env.outputs.unstable }}

    steps:
      - name: Set environment to global output variables based on branch
        id: set-env
        run: |
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            echo "unstable=false" >> $GITHUB_OUTPUT
          else
            echo "unstable=true" >> $GITHUB_OUTPUT
          fi

      - name: Print UNSTABLE from output
        run: |
          echo "Branch is - ${{ github.ref }}"
          echo "UNSTABLE - ${{ steps.set-env.outputs.unstable }}"

  build-and-push:
    runs-on: ubuntu-latest
    needs: pre-build

    strategy:
      matrix:
        platform: [linux/arm64]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU for Multi-Arch
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Debug vars
        run: |
          echo "UNSTABLE - is ${{ needs.pre-build.outputs.unstable }}"
          make get-version UNSTABLE=${{ needs.pre-build.outputs.unstable }}

      - name: Check if version synced
        run: make test-version-sync

      - name: Build and Push worker_slurmd Image
        run: |
          docker buildx build \
            --platform ${{ matrix.platform }} \
            --file ./images/worker/worker.slurmd.dockerfile \
            --tag ghcr.io/${{ github.repository_owner }}/worker_slurmd:latest \
            --tag ghcr.io/${{ github.repository_owner }}/worker_slurmd:${{ github.sha }} \
            --push ./images/worker

      - name: Build and Push controller_slurmctld Image
        run: |
          docker buildx build \
            --platform ${{ matrix.platform }} \
            --file ./images/controller/controller.slurmctld.dockerfile \
            --tag ghcr.io/${{ github.repository_owner }}/controller_slurmctld:latest \
            --tag ghcr.io/${{ github.repository_owner }}/controller_slurmctld:${{ github.sha }} \
            --push ./images/controller

      - name: Build and Push controller_slurmdbd Image
        run: |
          docker buildx build \
            --platform ${{ matrix.platform }} \
            --file ./images/accounting/controller.slurmdbd.dockerfile \
            --tag ghcr.io/${{ github.repository_owner }}/controller_slurmdbd:latest \
            --tag ghcr.io/${{ github.repository_owner }}/controller_slurmdbd:${{ github.sha }} \
            --push ./images/accounting

      - name: Build and Push login_sshd Image
        run: |
          docker buildx build \
            --platform ${{ matrix.platform }} \
            --file ./images/login/login.sshd.dockerfile \
            --tag ghcr.io/${{ github.repository_owner }}/login_sshd:latest \
            --tag ghcr.io/${{ github.repository_owner }}/login_sshd:${{ github.sha }} \
            --push ./images/login

      - name: Build and Push munge Image
        run: |
          docker buildx build \
            --platform ${{ matrix.platform }} \
            --file ./images/munge/munge.dockerfile \
            --tag ghcr.io/${{ github.repository_owner }}/munge:latest \
            --tag ghcr.io/${{ github.repository_owner }}/munge:${{ github.sha }} \
            --push ./images/munge

      - name: Build and Push nccl_benchmark Image
        run: |
          docker buildx build \
            --platform ${{ matrix.platform }} \
            --file ./images/nccl_benchmark/nccl_benchmark.dockerfile \
            --tag ghcr.io/${{ github.repository_owner }}/nccl_benchmark:latest \
            --tag ghcr.io/${{ github.repository_owner }}/nccl_benchmark:${{ github.sha }} \
            --push ./images/nccl_benchmark

      - name: Build and Push exporter Image
        run: |
          docker buildx build \
            --platform ${{ matrix.platform }} \
            --file ./images/exporter/exporter.dockerfile \
            --tag ghcr.io/${{ github.repository_owner }}/exporter:latest \
            --tag ghcr.io/${{ github.repository_owner }}/exporter:${{ github.sha }} \
            --push ./images/exporter

      - name: Build and Push slurmrestd Image
        run: |
          docker buildx build \
            --platform ${{ matrix.platform }} \
            --file ./images/restd/slurmrestd.dockerfile \
            --tag ghcr.io/${{ github.repository_owner }}/slurmrestd:latest \
            --tag ghcr.io/${{ github.repository_owner }}/slurmrestd:${{ github.sha }} \
            --push ./images/restd

      - name: Build tarball for jail
        run: |
          echo "Removing previous jail rootfs tar archive"
          rm -rf images/jail_rootfs.tar

          echo "Building tarball for jail"
          make docker-build UNSTABLE=${{ needs.pre-build.outputs.unstable }} IMAGE_NAME=jail DOCKERFILE=jail/jail.dockerfile DOCKER_OUTPUT="--output type=tar,dest=jail_rootfs.tar"
          echo "Built tarball jail_rootfs.tar"

      - name: Build and Push Populate Jail Image
        run: |
          make docker-build UNSTABLE=${{ needs.pre-build.outputs.unstable }} IMAGE_NAME=populate_jail DOCKERFILE=populate_jail/populate_jail.dockerfile
          make docker-push UNSTABLE=${{ needs.pre-build.outputs.unstable }} IMAGE_NAME=populate_jail

      - name: Build and Push Operator Image
        run: |
          UNSTABLE=${{ needs.pre-build.outputs.unstable }}
          OPERATOR_IMAGE_TAG=$(make get-operator-tag-version UNSTABLE=${UNSTABLE})

          echo "Building image of the operator"
          docker buildx build \
            --platform ${{ matrix.platform }} \
            --file Dockerfile \
            --tag ghcr.io/${{ github.repository_owner }}/slurm-operator:latest \
            --tag ghcr.io/${{ github.repository_owner }}/slurm-operator:${OPERATOR_IMAGE_TAG} \
            --push .

      - name: Release Helm Charts
        run: |
          UNSTABLE=${{ needs.pre-build.outputs.unstable }}
          OPERATOR_IMAGE_TAG=$(make get-operator-tag-version UNSTABLE=${UNSTABLE})
          echo "Pushing Helm charts"
          make release-helm UNSTABLE=${UNSTABLE} OPERATOR_IMAGE_TAG=${OPERATOR_IMAGE_TAG}
